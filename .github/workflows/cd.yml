name: CD

# Enable Buildkit and let compose use it to speed up image building
env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

on:
  push:
    branches: [ "staging" ]

#concurrency:
#  group: ${{ github.head_ref || github.run_id }}
#  cancel-in-progress: true

jobs:
  # With no caching at all the entire ci process takes 4m 30s to complete!
  # pytest:
    # runs-on: ubuntu-latest

    # services:
    #   postgres:
    #     image: postgres:12
    #     ports:
    #       - 5432:5432
    #     env:
    #       POSTGRES_PASSWORD: postgres

    # env:
    #   DATABASE_URL: "postgres://postgres:postgres@localhost:5432/postgres"

    # steps:
    #   - name: Checkout Code Repository
    #     uses: actions/checkout@v3

    #   - name: Set up Python
    #     uses: actions/setup-python@v3
    #     with:
    #       python-version: "3.9"
    #       cache: pip
    #       cache-dependency-path: |
    #         requirements/base.txt
    #         requirements/local.txt

    #   - name: Install Dependencies
    #     run: |
    #       python -m pip install --upgrade pip
    #       pip install -r requirements/local.txt

    #   - name: Test with pytest
    #     run: pytest

  deploy_to_heroku:
    # needs: pytest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: "finnp/create-file-action@master"
        env:
          FILE_NAME: "heroku.yml"
          FILE_DATA: "{setup: {addons: [{plan: heroku-postgresql, as: DATABASE\}]}, build: {docker: {web: Dockerfile}, config: {DJANGO_SETTINGS_MODULE: config.settings.heroku, GITHUB_AUTH_TOKEN: ${{secrets.AUTH_TOKEN}}}}}"
      - uses: akhileshns/heroku-deploy@v3.12.12 # This is the action
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}  # store your api within github secrets
          heroku_app_name: "sample-something" # Must be unique in Heroku
          heroku_email: "nc_osborne@hotmail.com"  # Your heroku login mail
          stack: "container"
